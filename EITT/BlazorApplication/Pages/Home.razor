@inherits LoginLayout
@page "/"
@using Domain.Dto
@using BlazorApp.HttpServices
@inject UserAccountHttpService userAccountHttpService
@inject NavigationManager Navigation

<div class="container-fluid h-100">
    <div class="row justify-content-center align-items-center h-100">
        <div class="col-lg-12 col-xl-11">
            <div class="card text-black" style="border-radius: 25px;">
                <div class="card-body p-md-5">
                    <div class="row justify-content-center">
                        <div class="col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1">

                            <p class="text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4">Sign In</p>

                            <EditForm Model="@loginDto" OnValidSubmit="@UserLogin" class="mx-1 mx-md-4">
                                <DataAnnotationsValidator />
                                <ValidationSummary />

                                <div class="d-flex flex-row align-items-center mb-4">
                                    <div data-mdb-input-init class="form-outline flex-fill mb-0 position-relative font13">
                                        <label for="username">Username</label>
                                        <InputText id="username" @bind-Value="loginDto.Username" class="form-control" />
                                        <ValidationMessage For="@(() => loginDto.Username)" />
                                    </div>
                                </div>

                                <div class="d-flex flex-row align-items-center mb-4">
                                    <div data-mdb-input-init class="form-outline flex-fill mb-0 position-relative font13">
                                        <label for="password">Password</label>
                                        <InputText id="password" @bind-Value="loginDto.Password" type="password" class="form-control" />
                                        <ValidationMessage For="@(() => loginDto.Password)" />
                                    </div>
                                </div>

                                <div class="form-group d-flex justify-content-center  mb-3 mb-lg-4">
                                    <button type="submit" data-mdb-button-init data-mdb-ripple-init class="btn btn-primary btn-lg w-100 font13">Login</button>
                                </div>

                                <p class="font11">Don't have an account ? <a href="/user-account/registration" class="text-primary font13">Sign Up</a></p>
                            </EditForm>
                        </div>
                        <div class="col-md-10 col-lg-6 col-xl-7 d-flex align-items-center order-1 order-lg-2">

                            <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-registration/draw1.webp"
                                 class="img-fluid" alt="Sample image">

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function togglePasswordVisibility(inputId, iconElement) {
        var passwordInput = document.getElementById(inputId);
        var toggleButton = iconElement;

        if (passwordInput.type === "password") {
            passwordInput.type = "text";
            toggleButton.classList.remove("fa-eye-slash");
            toggleButton.classList.add("fa-eye");
        } else {
            passwordInput.type = "password";
            toggleButton.classList.remove("fa-eye");
            toggleButton.classList.add("fa-eye-slash");
        }
    }
</script>
@code {
    private LoginDto loginDto = new LoginDto();

    [Inject]
    private UserAccountHttpService userAccountService { get; set; }

    private async Task UserLogin()
    {
        if (!loginDto.Validate()) return;


        try
        {
            var token = await userAccountService.LoginAsync(loginDto);

            Navigation.NavigateTo("/issue-list");
        }
        catch (Exception ex)
        {
            throw;
        }
    }
}