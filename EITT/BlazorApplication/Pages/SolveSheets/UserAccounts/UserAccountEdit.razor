@page "/user-account/edit/{key}"
@using BlazorApp.HttpServices
@using static Utilities.Constants.Enums
@inject UserAccountHttpService userAccountHttpService
@inject NavigationManager Navigation

@if (userAccount == null)
{
    <LoadingIndicator/>
}
else
{
    <section class="mb-3" style="background-color: #eee; ">
        <div class="container h-100">
            <div class="row d-flex justify-content-center align-items-center h-100">
                <div class="col-lg-12 col-xl-11">
                    <div class="card text-black" style="border-radius: 25px;">
                        <div class="card-body p-md-5">
                            <div class="row justify-content-center">
                                <div class="col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1">

                                    <p class="text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4">Sign up</p>

                                    <EditForm Model="@userAccount" class="mx-1 mx-md-4">

                                        <div class="d-flex flex-row align-items-center mb-4">
                                            <i class="fas fa-user fa-lg me-3 fa-fw"></i>
                                            <div data-mdb-input-init class="form-outline flex-fill mb-0">
                                                <input type="text" id="FirstName" @bind="@userAccount.FirstName" class="form-control  font13" placeholder="First Name" />
                                                <ValidationMessage For="@(() => userAccount.FirstName)" />
                                            </div>
                                        </div>

                                        <div class="d-flex flex-row align-items-center mb-4">
                                            <i class="fas fa-user fa-lg me-3 fa-fw"></i>
                                            <div data-mdb-input-init class="form-outline flex-fill mb-0 position-relative">
                                                <input type="text" id="Surname" class="form-control font13" @bind="@userAccount.Surname" placeholder="Surname" />
                                                <ValidationMessage For="@(() => userAccount.Surname)" />
                                            </div>
                                        </div>

                                        <div class="d-flex flex-row align-items-center mb-4">
                                            <i class="fas fa-envelope fa-lg me-3 fa-fw"></i>
                                            <div data-mdb-input-init class="form-outline flex-fill mb-0 position-relative font13">
                                                <input type="email" id="Email" class="form-control font13" @bind="@userAccount.Email" placeholder="Email" />
                                                <ValidationMessage For="@(() => userAccount.Email)" />
                                            </div>
                                        </div>

                                        <div class="d-flex flex-row align-items-center mb-4">
                                            <i class="fas fa-users fa-lg me-3 fa-fw"></i>
                                            <div data-mdb-input-init class="form-outline flex-fill mb-0 position-relative">
                                                <select class="form-control" @bind="userAccount.UserType" required>
                                                    <option value="0" selected>Select</option>
                                                    @foreach (UserType userType in Enum.GetValues(typeof(UserType)))
                                                    {
                                                        <option value="@userType">@userType</option>
                                                    }
                                                </select>
                                            </div>
                                        </div>

                                        <div class="d-flex flex-row align-items-center mb-4">
                                            <i class="fas fa-user fa-lg me-3 fa-fw"></i>
                                            <div data-mdb-input-init class="form-outline flex-fill mb-0 position-relative font13">
                                                <input type="text" id="Username" class="form-control font13" placeholder="Username" @bind="@userAccount.Username" />
                                                <ValidationMessage For="@(() => userAccount.Username)" />
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-12 mb-3 form-password-toggle">
                                                <div class="input-group input-group-merge">
                                                    <input type="password" class="form-control" name="password" @bind="userAccount.Password" placeholder="Password" aria-describedby="password" required />
                                                    <span class="input-group-text cursor-pointer"><i class="bx bx-hide"></i></span>
                                                </div>
                                            </div>

                                            <div class="col-12 mb-3 form-password-toggle">
                                                <div class="input-group input-group-merge">
                                                    <input type="password" class="form-control" @bind="userAccount.ConfirmPassword" placeholder="ConfirmPassword" aria-describedby="confirm-password" required />
                                                    <span class="input-group-text cursor-pointer"><i class="bx bx-hide"></i></span>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="d-flex justify-content-center  mb-3 mb-lg-4">
                                            <button @onclick="UpdateUserAccount" data-mdb-button-init data-mdb-ripple-init class="btn btn-primary btn-lg w-100 font13">Register</button>
                                        </div>
                                        <p class="font11 pointer">Already have an account ? <a href="/" class="text-primary font13">Sign In</a></p>
                                    </EditForm>

                                </div>
                                <div class="col-md-10 col-lg-6 col-xl-7 d-flex align-items-center order-1 order-lg-2">

                                    <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-registration/draw1.webp"
                                         class="img-fluid" alt="Sample image">

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
}

@code {
    UserAccount userAccount;

    [Parameter]
    public string key { get; set; }

    protected override async Task OnInitializedAsync()
    {

        userAccount = await userAccountHttpService.GetUserAccountByIdAync(Guid.Parse(key));
    }

    private async Task UpdateUserAccount()
    {
        try
        {
            await userAccountHttpService.UpdateUserAccountAsync(userAccount);
        }
        catch (Exception ex)
        {

            Console.WriteLine($"Error: {ex.Message}");
            Navigation.NavigateTo("/user-accounts");
        }
    }
    private void Cancel()
    {
        Navigation.NavigateTo("/user-accounts");
    }
}